{"version":3,"sources":["webpack:///./src/components/Project.js","webpack:///./src/components/Projects.js","webpack:///./src/components/Hero.js","webpack:///./src/constants/services.js","webpack:///./src/components/Services.js","webpack:///./src/components/Jobs.js","webpack:///./src/pages/index.js","webpack:///./node_modules/core-js/modules/es6.string.link.js"],"names":["Project","description","title","github","stack","url","image","index","className","fluid","childImageSharp","map","item","key","id","href","Projects","projects","showLink","Title","project","to","Hero","file","classname","icon","text","link","Services","services","service","alt","Jobs","jobs","allStrapiInternships","nodes","React","useState","value","setValue","company","position","date","desc","strapiId","onClick","name","query","data","allStrapiProjects","Layout","SEO","createHTML","this"],"mappings":"2KAuCeA,EAnCC,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,YAAaC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAChE,OACE,6BAASC,UAAU,WACjB,kBAAC,IAAD,CAAOC,MAAOH,EAAMI,gBAAgBD,MAAOD,UAAU,gBACrD,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,kBAAhB,IAAmCD,EAAQ,EAA3C,KACA,4BAAKL,GAAS,iBACd,uBAAGM,UAAU,gBAAgBP,GAC7B,yBAAKO,UAAU,iBACZJ,EAAMO,KAAI,SAAAC,GACT,OAAO,0BAAMC,IAAKD,EAAKE,IAAKF,EAAKV,WAGrC,yBAAKM,UAAU,iBACb,uBAAGO,KAAMZ,GACP,kBAAC,IAAD,CAAgBK,UAAU,kBAE5B,uBAAGO,KAAMV,GACP,kBAAC,IAAD,CAAeG,UAAU,sB,YCAtBQ,IAlBE,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUf,EAAsB,EAAtBA,MAAOgB,EAAe,EAAfA,SACnC,OACE,6BAASV,UAAU,oBACjB,kBAACW,EAAA,EAAD,CAAOjB,MAAOA,IACd,yBAAKM,UAAU,kCACZS,EAASN,KAAI,SAACS,EAASb,GACtB,OAAO,kBAAC,EAAD,eAASM,IAAKO,EAAQN,GAAIP,MAAOA,GAAWa,QAGtDF,GACC,kBAAC,IAAD,CAAMG,GAAG,YAAYb,UAAU,kBAA/B,e,2kFC6BOc,EA3BF,WAAO,IAGKb,EAHN,OAEfc,KACEb,gBAAmBD,MAGvB,OACE,4BAAQD,UAAU,QAChB,yBAAKA,UAAU,8BACb,6BAASA,UAAU,aACjB,6BACE,yBAAKgB,UAAU,aACb,0CACA,kDACA,kBAAC,IAAD,CAAMH,GAAG,WAAWb,UAAU,OAA9B,cAGA,kBAAC,IAAD,SAIN,kBAAC,IAAD,CAAOC,MAAOA,EAAOD,UAAU,gB,oCCnCxB,GACb,CACEM,GAAI,EACJW,KAAM,kBAAC,IAAD,CAAQjB,UAAU,iBACxBN,MAAO,SACPwB,KAAK,4DACLC,KAAM,kDAER,CACEb,GAAI,EACJW,KAAM,kBAAC,IAAD,CAAUjB,UAAU,iBAC1BN,MAAO,SACPwB,KAAK,6CACLC,KACE,uFCUSC,EAvBE,WACf,OACE,6BAASpB,UAAU,mBACjB,kBAACW,EAAA,EAAD,CAAOjB,MAAM,UACb,yBAAKM,UAAU,kCACZqB,EAASlB,KAAI,SAAAmB,GAAY,IAChBhB,EAAgCgB,EAAhChB,GAAIZ,EAA4B4B,EAA5B5B,MAAOuB,EAAqBK,EAArBL,KAAMC,EAAeI,EAAfJ,KAAMC,EAASG,EAATH,KAC/B,OACE,uBAAGZ,KAAMY,EAAMI,IAAI,SACjB,6BAASlB,IAAKC,EAAIN,UAAU,WACzBiB,EACD,4BAAKvB,GACL,yBAAKM,UAAU,cACf,2BAAIkB,W,wBCkDLM,EA7CF,WACX,IAEiCC,EAFvB,OAERC,qBAAwBC,MAHT,EAKSC,IAAMC,SAAS,GAAlCC,EALU,KAKHC,EALG,OAMyBN,EAAKK,GAAvCE,EANS,EAMTA,QAASC,EANA,EAMAA,SAAUC,EANV,EAMUA,KAAMC,EANhB,EAMgBA,KACjC,OACE,6BAASnC,UAAU,gBACjB,kBAACW,EAAA,EAAD,CAAOjB,MAAM,gBACb,yBAAKM,UAAU,eACb,yBAAKA,UAAU,iBACZyB,EAAKtB,KAAI,SAACC,EAAML,GACf,OACE,4BACEM,IAAKD,EAAKgC,SACVC,QAAS,kBAAMN,EAAShC,IACxBC,UAAS,YAAaD,IAAU+B,GAAV,eAErB1B,EAAK4B,aAKd,6BAAShC,UAAU,YACjB,4BAAKiC,GACL,4BAAKD,GACL,uBAAGhC,UAAU,YAAYkC,GACxBC,EAAKhC,KAAI,SAAAC,GACR,OACE,yBAAKC,IAAKD,EAAKE,GAAIN,UAAU,YAC3B,kBAAC,IAAD,CAAoBA,UAAU,aAC9B,2BAAII,EAAKkC,YAMnB,kBAAC,IAAD,CAAMzB,GAAG,SAASb,UAAU,kBAA5B,e,wBCrCOuC,GAdE,sBAAe,IAEE9B,EAFH,EAAX+B,KAEdC,kBAAqBd,MAEvB,OACE,kBAACe,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKjD,MAAM,OAAOD,YAAY,0BAC9B,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAACe,EAAA,EAAD,CAAUC,SAAUA,EAAUf,MAAM,oBAAoBgB,UAAQ,MAIpD,c,sgBCpBlB,EAAQ,OAAR,CAA0B,QAAQ,SAAUkC,GAC1C,OAAO,SAAc/C,GACnB,OAAO+C,EAAWC,KAAM,IAAK,OAAQhD","file":"component---src-pages-index-js-f8a26ccd18d7fc3b6597.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { FaGithubSquare, FaShareSquare } from \"react-icons/fa\"\nconst Project = ({ description, title, github, stack, url, image, index }) => {\n  return (\n    <article className=\"project\">\n      <Image fluid={image.childImageSharp.fluid} className=\"project-img\" />\n      <div className=\"project-info\">\n        <span className=\"project-number\">0{index + 1}.</span>\n        <h3>{title || \"default title\"}</h3>\n        <p className=\"project-desc\">{description}</p>\n        <div className=\"project-stack\">\n          {stack.map(item => {\n            return <span key={item.id}>{item.title}</span>\n          })}\n        </div>\n        <div className=\"project-links\">\n          <a href={github}>\n            <FaGithubSquare className=\"project-icon\" />\n          </a>\n          <a href={url}>\n            <FaShareSquare className=\"project-icon\" />\n          </a>\n        </div>\n      </div>\n    </article>\n  )\n}\n\nProject.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  github: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  image: PropTypes.object.isRequired,\n  stack: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default Project\n","import React from \"react\"\nimport Title from \"./Title\"\nimport Project from \"./Project\"\nimport { Link } from \"gatsby\"\nconst Projects = ({ projects, title, showLink }) => {\n  return (\n    <section className=\"section projects\">\n      <Title title={title} />\n      <div className=\"section-center projects-center\">\n        {projects.map((project, index) => {\n          return <Project key={project.id} index={index} {...project} />\n        })}\n      </div>\n      {showLink && (\n        <Link to=\"/projects\" className=\"btn center-btn\">\n          projects\n        </Link>\n      )}\n    </section>\n  )\n}\n\nexport default Projects\n","import React from \"react\"\nimport Image from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport SocialLinks from \"../constants/socialLinks\"\nconst query = graphql`\n  {\n    file(relativePath: { eq: \"hero-img.png\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\nconst Hero = () => {\n  const {\n    file: {\n      childImageSharp: { fluid },\n    },\n  } = useStaticQuery(query)\n  return (\n    <header className=\"hero\">\n      <div className=\"section-center hero-center\">\n        <article className=\"hero-info\">\n          <div>\n            <div classname=\"underline\">\n              <h1>I'm Sparsh</h1>\n              <h4>Software Developer</h4>\n              <Link to=\"/contact\" className=\"btn\">\n                Contact me\n              </Link>\n              <SocialLinks />\n            </div>\n          </div>\n        </article>\n        <Image fluid={fluid} className=\"hero-img\" />\n      </div>\n    </header>\n  )\n}\n\nexport default Hero\n","import React from \"react\"\nimport { FaCode, FaSketch, FaAndroid } from \"react-icons/fa\"\nexport default [\n  {\n    id: 1,\n    icon: <FaCode className=\"service-icon\" />,\n    title: \"Github\",\n    text: `You can find git repo for this project and fork it here. `,\n    link: \"https://github.com/sparsh229/digital-portfolio\",\n  },\n  {\n    id: 2,\n    icon: <FaSketch className=\"service-icon\" />,\n    title: \"Resume\",\n    text: `You can download my resume using this card`,\n    link:\n      \"https://drive.google.com/file/d/1atFIvlbgmnK3RxsqBUCecYXiLsAJTjGJ/view?usp=sharing\",\n  },\n]\n","import React from \"react\"\nimport Title from \"./Title\"\nimport services from \"../constants/services\"\nconst Services = () => {\n  return (\n    <section className=\"section bg-grey\">\n      <Title title=\"Links\" />\n      <div className=\"section-center services-center\">\n        {services.map(service => {\n          const { id, title, icon, text, link } = service\n          return (\n            <a href={link} alt=\"links\">\n              <article key={id} className=\"service\">\n                {icon}\n                <h4>{title}</h4>\n                <div className=\"underline\"></div>\n                <p>{text}</p>\n              </article>\n            </a>\n          )\n        })}\n      </div>\n    </section>\n  )\n}\n\nexport default Services\n","import React from \"react\"\nimport Title from \"./Title\"\nimport { FaAngleDoubleRight } from \"react-icons/fa\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { Link } from \"gatsby\"\nconst query = graphql`\n  {\n    allStrapiInternships(sort: { fields: strapiId, order: DESC }) {\n      nodes {\n        company\n        date\n        position\n        desc {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nconst Jobs = () => {\n  const data = useStaticQuery(query)\n  const {\n    allStrapiInternships: { nodes: jobs },\n  } = data\n  const [value, setValue] = React.useState(0)\n  const { company, position, date, desc } = jobs[value]\n  return (\n    <section className=\"section-jobs\">\n      <Title title=\"Internships\" />\n      <div className=\"jobs-center\">\n        <div className=\"btn-container\">\n          {jobs.map((item, index) => {\n            return (\n              <button\n                key={item.strapiId}\n                onClick={() => setValue(index)}\n                className={`job-btn ${index === value && `active-btn`}`}\n              >\n                {item.company}\n              </button>\n            )\n          })}\n        </div>\n        <article className=\"job-info\">\n          <h3>{position}</h3>\n          <h4>{company}</h4>\n          <p className=\"job-date\">{date}</p>\n          {desc.map(item => {\n            return (\n              <div key={item.id} className=\"job-desc\">\n                <FaAngleDoubleRight className=\"job-icon\"></FaAngleDoubleRight>\n                <p>{item.name}</p>\n              </div>\n            )\n          })}\n        </article>\n      </div>\n      <Link to=\"/about\" className=\"btn center-btn\">\n        More info\n      </Link>\n    </section>\n  )\n}\n\nexport default Jobs\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport Hero from \"../components/Hero\"\nimport Services from \"../components/Services\"\nimport Jobs from \"../components/Jobs\"\nimport Projects from \"../components/Projects\"\nimport SEO from \"../components/SEO\"\nexport default ({ data }) => {\n  const {\n    allStrapiProjects: { nodes: projects },\n  } = data\n  return (\n    <Layout>\n      <SEO title=\"Home\" description=\"This is our home page\" />\n      <Hero />\n      <Jobs />\n      <Services />\n      <Projects projects={projects} title=\"featured projects\" showLink />\n    </Layout>\n  )\n}\nexport const query = graphql`\n  {\n    allStrapiProjects(filter: { featured: { eq: true } }) {\n      nodes {\n        github\n        id\n        title\n        url\n        description\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        stack {\n          id\n          title\n        }\n      }\n    }\n  }\n`\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}